name: Build and Release Rule-Sets

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs automatically at 7:00 AM Taiwan time (UTC+8) every day
  schedule:
    - cron: "0 23 * * *"

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create the release and upload assets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install requests

      - name: Run converter script to generate JSON files
        run: python convert.py

      - name: Download sing-box binary
        run: |
          LATEST_URL=$(curl -sL "https://api.github.com/repos/SagerNet/sing-box/releases/latest" | grep "browser_download_url" | grep "linux-amd64" | cut -d '"' -f 4)
          wget -q "$LATEST_URL" -O sing-box.tar.gz
          tar -xzf sing-box.tar.gz
          mv sing-box-*-linux-amd64/sing-box .
          chmod +x ./sing-box
          ./sing-box version

      - name: Compile JSON rules to SRS format
        run: |
          mkdir -p dist
          for json_file in dist/*.json; do
            srs_file="${json_file%.json}.srs"
            echo "Compiling $json_file to $srs_file..."
            ./sing-box rule-set compile "$json_file" --output "$srs_file"
          done

      - name: Update Latest Release
        uses: softprops/action-gh-release@v2
        with:
          # Use a static tag name. The action will update the release if it exists.
          tag_name: "latest"
          # Give the release a clear name.
          name: "Latest Rule-Set Build"
          # The action will update the release notes with the latest commit.
          generate_release_notes: true
          # The files to upload. This will overwrite any existing assets in the release.
          files: |
            dist/*.srs
